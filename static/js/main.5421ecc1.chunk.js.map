{"version":3,"sources":["Track.js","Participant.js","Room.js","App.js","reportWebVitals.js","index.js"],"names":["Track","props","ref","React","createRef","this","track","child","attach","current","classList","add","kind","appendChild","className","Component","Participant","nonNullTracks","Array","from","participant","tracks","values","map","publication","filter","state","localParticipant","on","addTrack","setState","id","identity","Room","remoteParticipants","room","participants","leaveRoom","bind","addParticipant","removeParticipant","window","addEventListener","disconnect","console","log","p","onClick","connect","require","App","inputRef","joinRoom","updateIdentity","removePlaceholderText","fetch","response","json","data","accessToken","name","audio","video","event","target","value","placeholder","disabled","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5421ecc1.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.scss';\n\nclass Track extends Component {\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.track !== null) {\n            const child = this.props.track.attach();\n            this.ref.current.classList.add(this.props.track.kind);\n            this.ref.current.appendChild(child)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"track\" ref={this.ref}>\n            </div>\n        )\n    }\n}\n\nexport default Track;","import React, {Component} from 'react';\nimport './App.scss';\nimport Track from './Track';\n\nclass Participant extends Component {\n    constructor(props) {\n        super(props);\n\n        const existingPublications = Array.from(this.props.participant.tracks.values());\n        const existingTracks = existingPublications.map(publication => publication.track);\n        const nonNullTracks = existingTracks.filter(track => track !== null)\n\n        this.state = {\n            tracks: nonNullTracks\n        }\n    }\n\n    componentDidMount() {\n        if (!this.props.localParticipant) {\n            this.props.participant.on('trackSubscribed', track => this.addTrack(track));\n        }\n    }\n\n    addTrack(track) {\n        this.setState({\n            tracks: [...this.state.tracks, track]\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"participant\" id={this.props.participant.identity}>\n                <div className=\"identity\">{ this.props.participant.identity}</div>\n                {\n                    this.state.tracks.map(track =>\n                        <Track key={track} track={track}/>)\n                }\n            </div>\n        );\n    }\n}\n\nexport default Participant;","import React, {Component} from 'react';\nimport './App.scss';\nimport Participant from './Participant';\n\n\nclass Room extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            remoteParticipants: Array.from(this.props.room.participants.values())\n        }\n\n        this.leaveRoom = this.leaveRoom.bind(this);\n    }\n\n    componentDidMount() {\n        // Add event listeneres for future participants coming or going\n        this.props.room.on('participantConnected', participant => this.addParticipant(participant));\n        this.props.room.on('participantDisconnected', participant => this.removeParticipant(participant));\n\n        window.addEventListener(\"beforeunload\", this.leaveRoom);\n    }\n\n    componentWillUnmount() {\n        this.leaveRoom();\n    }\n\n    leaveRoom() {\n        this.props.room.disconnect();\n        this.props.leaveRoom();\n    }\n\n    addParticipant(participant) {\n        console.log(`${participant.identity} has joined the room.`)\n\n        this.setState({\n            remoteParticipants: [...this.state.remoteParticipants, participant]\n        })\n    }\n\n    removeParticipant(participant) {\n        console.log(`${participant.identity} has left the room`)\n\n        this.setState({\n            remoteParticipants: this.state.remoteParticipants.filter(p => p.identity !== participant.identity)\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"room\">\n                <div className = \"participants\">\n                    <Participant key={this.props.room.localParticipant.identity} localParticipant=\"true\" participant={this.props.room.localParticipant}/>\n                    {\n                        this.state.remoteParticipants.map(participant =>\n                            <Participant key={participant.identity} participant={participant}/>\n                        )\n                    }\n                </div>\n                <button id=\"leaveRoom\" onClick={this.leaveRoom}>Leave Room</button>\n            </div>\n        );\n    }\n\n}\n\nexport default Room;\n","import './App.scss';\nimport React, {Component} from 'react';\nimport Room from './Room';\nconst { connect } = require('twilio-video');\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            identity: '',\n            room: null\n        }\n\n        this.inputRef = React.createRef();\n\n        this.joinRoom = this.joinRoom.bind(this);\n        this.leaveRoom = this.leaveRoom.bind(this);\n        this.updateIdentity = this.updateIdentity.bind(this);\n        this.removePlaceholderText = this.removePlaceholderText.bind(this);\n    }\n\n    async joinRoom() {\n        try {\n            const response = await fetch(`https://token-service-8705-dev.twil.io/token\n?identity=${this.state.identity}`);\n            const data = await response.json();\n            const room = await connect(data.accessToken, {\n                name: 'cool-room',\n                audio: true,\n                video: true\n            });\n\n            this.setState({ room: room });\n        } catch(err) {\n            console.log(err);\n        }\n    }\n\n    leaveRoom() {\n        this.setState({ room: null });\n    }\n\n    updateIdentity(event) {\n        this.setState({\n            identity: event.target.value\n        });\n    }\n\n    removePlaceholderText() {\n        this.inputRef.current.placeholder = '';\n    }\n\n    render() {\n        const disabled = this.state.identity === '';\n\n        return (\n            <div className=\"app\">\n                {\n                    this.state.room === null\n                        ? <div className = \"lobby\">\n                            <input\n                                ref={this.inputRef}\n                                value={this.state.identity}\n                                onClick={this.removePlaceholderText}\n                                onChange={this.updateIdentity}\n                                placeholder=\"What's your name?\"/>\n                            <button disabled={disabled} onClick={this.joinRoom}>Join Room</button>\n                        </div>\n                        : <Room leaveRoom={this.leaveRoom} room={this.state.room} />\n                }\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}